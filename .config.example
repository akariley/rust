#################
# MAIN SETTINGS
#################

# where did you install your Rust server?  This is relative to your home dir.
# ie: for an install in /home/foo/rust/, put 'rust'
# leave empty if you installed the server into the home directory.
rustDir=

# node is used to send commands to a running Rust server.
# if you installed node globally the default should work (usually /usr/bin/webrcon-cli)
# otherwise you'll need to know where you installed it.
# a local npm install usually puts it here: ~/node_modules/webrcon-cli/dist/bin/webrcon-cli.js
webRconCmd=/usr/bin/webrcon-cli



# Set some variables we need.

home=${HOME}

if [ ! -z ${rustDir} ]
then
  installDir=${home}/${rustDir}
else
  installDir=${HOME}
fi

# an array of files and paths to backup.
# These are relative to your install directory.  Add new ones as needed, formatting as an array.

backupList=(
  lgsm/config-lgsm/rustserver
  serverfiles/server/rustserver
  log/console
)

if [ -d ${installDir}/serverfiles/oxide ]
then
  backupList+=(
    serverfiles/oxide
  )
fi


# where did you place the scripts?  We default to ~/rust-scripts/
#scriptDir=${installDir}/rust-scripts/


# And what are they named?  Uncomment those you use.
#backupScript=${scriptDir}/backup.sh
#restoreScript=${scriptDir}/restore.sh
#wipeScript=${scriptDir}/wipe-script.sh


#===========================================
user=$(whoami)
month=$(date +"%-m")
scriptDir=$(pwd)

#lgsmConfig=/home/rust-testing/rust/lgsm/config-lgsm/rustserver/rustserver.cfg
#lgsmConfig=/path/to/lgsmserver.cfg
#===========================================


###################
# LOGGING OPTIONS #
###################

logDate=$(date +"%m-%d-%Y-%s")
logFile=weekly-tasks_${logDate}.log
fullLog=${installDir}/log/${logFile}

# we can use exec to pipe the output to a log file.  To enable this, set this to 1.
execLogging=0

################
# BACKUP SETTINGS
################

# where are your backups stored? we default to ~/backups/
#backupDir=/game-backups/${user}
backupDir=${home}/game-backups

# what suffix would you like for the backup directory?  We default to ${backupDir}/<day of month>/
backupDirSuffix=$(date +%m)

# do we issue a 'server.save' command to the rust server when the backup script is run?
# 1 = yes, 0 = no
# WARNING: backups won't run if your lgsmConfig variable is not correct if this is set.
#saveOnBackup=1

# date suffix for backups.  we default to YYYY-Month-Numerical_date-24HR_time
# ex: 2021-Sep-12-0826 is September 12th, 2021 at 8:26am.
# (this is 'date +%Y-%b-%d-%H%M') if curious.
# The username and instance name will be prefixed (username_instanceName_2021-Sep-12-0826)
backupDate=$(date +%Y-%b-%d-%H%M)

function temp_Files {
  tmpFile=$(mktemp --tmpdir=${rs_rootDir}/tmp instancelist.${rs_selfName}.XXXXXXXX 2>/dev/null)
  if [[ ! -e $tmpFile ]]
  then
    # couldn't make temp file in our working directory, trying /tmp.
    tmpFile=$(mktemp --tmpdir=/tmp instancelist.${rs_selfName}.XXXXXXXX 2>/dev/null)
    if [[ ! -e $tmpFile ]]
    then
      # we can't make a temp file in our working dir or in /tmp, exit.
      echo "Error: failed making temporary file in working directory and in /tmp, exiting."
      exit 255
    fi
  fi
}

